version: 0.2

phases:
  build:
    commands:
      - echo "Downloading latest Terraform"
      - curl -o terraform.zip https://releases.hashicorp.com/terraform/1.12.1/terraform_1.12.1_linux_amd64.zip
      - unzip terraform.zip
      - mv terraform /usr/local/bin/
      - terraform -version
      
      # Create state bucket first
      - cd S3/state-bucket
      - |
        if aws s3api head-bucket --bucket "testingxperts-terraform-state" 2>/dev/null; then
          echo "State bucket already exists, skipping creation..."
        else
          echo "Creating state bucket..."
          terraform init
          terraform apply -auto-approve
        fi
      
      # Now create main bucket with backend
      - cd ../
      - terraform init -migrate-state
      - terraform validate
      
      # Continue with main bucket creation
      - echo "Checking if main bucket exists..."
      - |
        if aws s3api head-bucket --bucket "$(grep bucket_name terraform.tfvars | cut -d'=' -f2 | tr -d ' \"')" 2>/dev/null; then
          echo "Bucket already exists. Please choose a different bucket name."
          echo "âœ¨ Pipeline completed successfully - no changes needed"
          exit 1
          
          else
              echo "Bucket name is available. Proceeding with creation."
        fi
      
      - echo "Planning infrastructure"
      - terraform plan -out=tfplan -var-file="terraform.tfvars"

      # Applying the changes 
      - echo "Applying infrastructure"
      - terraform apply -auto-approve tfplan

      # wait for 2 minutes for detsroying
      - echo "Sleeping for 60 seconds before destroying..."
      - sleep 120

      # destroy the infrastructure     
      - echo "Destroying infrastructure"
      - terraform destroy -auto-approve -var-file="terraform.tfvars"